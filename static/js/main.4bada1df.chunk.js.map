{"version":3,"sources":["utils/delay.ts","hooks/useHover.ts","components/OptionHideShow.tsx","components/FolderHeader.tsx","actions/index.ts","hooks/useMappedActions.ts","config/constants.ts","components/BookmarkGridItem.tsx","utils/getFaviconUrl.ts","components/BookmarkGrid.tsx","components/FolderList.tsx","components/SearchBar.tsx","components/LogoImage.tsx","hooks/useKeyboardPress.ts","components/Header.tsx","utils/compareIndexes.ts","components/NoResult.tsx","components/App.tsx","selectors/getBookmarkTree.ts","selectors/getIsFolderHidden.ts","selectors/getCurrentTheme.ts","components/GlobalStyle.tsx","reducers/bookmarksReducer.ts","reducers/sessionReducer.ts","reducers/themesReducer.ts","config/themes.ts","reducers/index.ts","utils/moveArrayElement.ts","services/chromeService.ts","utils/parseChromeBookmarks.ts","sagas/retrieveBookmarksSaga.ts","sagas/rehydrateSaga.ts","sagas/persistSaga.ts","sagas/moveBookmarkSaga.ts","sagas/index.ts","utils/createReduxStore.ts","index.tsx","hooks/useOnMount.ts"],"names":["delay","ms","Promise","res","setTimeout","defaultOptions","OptionHideShow","memo","props","isHidden","_props$size","size","onClick","otherProps","Object","objectWithoutProperties","react_default","a","createElement","Root","assign","e","preventDefault","StyledHideIcon","StyledShowIcon","scaleIn","keyframes","_templateObject","styled","div","withConfig","displayName","componentId","concat","theme","folderOptionBackground","HideIcon","folderOptionColor","ShowIcon","FolderHeader","_ref","title","onOptionClick","_useHover","options","arguments","length","undefined","_useState","useState","_useState2","slicedToArray","isHovered","setIsHovered","isCurrentlyHovered","useRef","handleMouseOver","current","handleMouseOut","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","stop","this","apply","ref","useEffect","node","addEventListener","removeEventListener","useHover","_useHover2","rootRef","FolderHeader_Root","Title","Options","p","folderColor","setQuery","createAction","resolve","query","actions","toggleShowHiddenBookmarks","retrieveBookmarks","retrieveBookmarksSuccess","foldersById","bookmarksById","moveBookmark","bookmark","oldIndex","newIndex","moveBookmarkSuccess","hideFolder","bookmarkId","showFolder","goToNextTheme","rehydrate","rehydrateSuccess","persistedState","useMappedActions","actionsObj","dispatch","useDispatch","mapValues","value","useCallback","IS_LIVE_EXAMPLE","process","REACT_APP_IS_LIVE_EXAMPLE","BookmarkGridItem","SortableElement","url","isHoverDisabled","isTransitionDisabled","faviconSrc","prefixLessUrl","URL","hostname","err","getFaviconUrl","BookmarkGridItem_Root","draggable","href","rel","Content","Favicon","src","BookmarkGridItem_Title","itemBackground","itemBorder","itemShadow","itemHoverBackground","itemHoverShadow","img","span","itemTextColor","itemHoverTextColor","BookmarkGrid","SortableContainer","folder","isDragging","isFolderHidden","BookmarkGrid_Root","bookmarks","map","index","key","id","ul","FolderList","bookmarkTree","setIsDragging","handleStartDragging","_useMappedActions2","FolderList_Root","FolderItem","FolderHeader_FolderHeader","axis","distance","updateBeforeSortStart","onSortEnd","params","handleStopDragging","li","SearchBar","forwardRef","onChange","Form","StyledSearchIcon","Input","placeholder","type","target","form","SearchIcon","headerColor","input","LogoImage","withTheme","viewBox","xmlSpace","d","fill","checkKeyValidity","ctrlKey","metaKey","shiftKey","mapState","state","session","isShowingHiddenBookmarks","Header","_useMappedState","useMappedState","_useMappedActions","searchBarRef","isKeyDown","setIsKeyDown","shouldDisableKeyDownUpdate","handleKeyDown","onKeyDown","handleKeyUp","onKeyUp","window","document","useKeyboardPress","focus","Header_Root","Logo","StyledLogoImage","LogoText","Menu","MenuItem","Header_StyledHideIcon","Header_StyledShowIcon","Separator","StyledColorLensIcon","tabIndex","StyledGithubIcon","fadeInBottom","Header_templateObject","headerBackground","ColorLensIcon","GithubIcon","compareIndexes","b","comparison","indexA","indexB","NoResult","NoResult_Root","Message","fadeInTop","NoResult_templateObject","noResultColor","_state$bookmarks","_state$session","folders","keys","folderId","objectSpread","hiddenFolderIds","includes","getIsFolderHidden","filter","x","sort","forEach","isTitleInQuery","toLowerCase","isUrlInQuery","folderIndex","findIndex","parentId","push","getBookmarkTree","areBookmarksReady","currentTheme","_state$themes","themes","availableThemes","currentThemeId","getCurrentTheme","fadeIn","App_templateObject","appBackground","Main","main","GlobalStyle","createGlobalStyle","GlobalStyle_templateObject","initialState","isRetrievingBookmarks","deepBlue","sky","white","rootReducer","combineReducers","action","produce","draft","getType","payload","indexOf","pull","_action$payload","values","array","fromIndex","toIndex","newArray","toConsumableArray","inc","i","moveArrayElement","availableThemeIds","currentThemeIndex","nextThemeId","getBookmarks","abrupt","bookmarksFixture","chrome","getTree","_ref2","_callee2","_context2","fixedNewIndex","move","_x","_x2","_x3","parseChromeBookmarks","chromeBookmarks","parseBookmarkNodes","nodes","children","dateGroupModified","unmodifiable","retrieveBookmarksSaga","parsedBookmarks","sent","put","rehydrateSaga","storedReduxState","reduxState","localStorage","getItem","JSON","parse","persistSaga","reduxStateToPersist","select","setItem","stringify","moveBookmarkSaga","rootSaga","all","takeEvery","sagaMiddleware","createLogger","collapsed","duration","createSagaMiddleware","store","middlewares","enhancer","compose","applyMiddleware","createStore","run","createReduxStore","ReactDOM","render","Fragment","index_es","Provider","onMount","isBookmarkTreeEmpty","isEmpty","styled_components_browser_esm","App_Root","NoResult_NoResult","getElementById"],"mappings":"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","file":"static/js/main.4bada1df.chunk.js","sourcesContent":["// tslint:disable-next-line no-string-based-set-timeout\nexport const delay = (ms: number) => new Promise(res => setTimeout(res, ms));\n","import { useState, useRef, useEffect, RefObject } from \"react\";\nimport { delay } from \"../utils/delay\";\n\ninterface Options {\n  delay?: number; // ms after which the hover status is set to false\n}\n\nconst defaultOptions = {\n  delay: 20\n};\n\nexport function useHover<T>(\n  options: Options = defaultOptions\n): [RefObject<T>, boolean] {\n  const [isHovered, setIsHovered] = useState(false);\n  const isCurrentlyHovered = useRef(false);\n\n  const handleMouseOver = () => {\n    isCurrentlyHovered.current = true;\n    if (!isHovered) {\n      setIsHovered(true);\n    }\n  };\n\n  const handleMouseOut = async () => {\n    isCurrentlyHovered.current = false;\n    await delay(options.delay || 0);\n    if (!isCurrentlyHovered.current) {\n      setIsHovered(false);\n    }\n  };\n\n  const ref = useRef<T>(null);\n\n  useEffect(() => {\n    if (ref && ref.current) {\n      const node = ref.current as any;\n      node.addEventListener(\"mouseover\", handleMouseOver);\n      node.addEventListener(\"mouseout\", handleMouseOut);\n    }\n\n    return () => {\n      if (ref && ref.current) {\n        const node = ref.current as any;\n        node.removeEventListener(\"mouseover\", handleMouseOver);\n        node.removeEventListener(\"mouseout\", handleMouseOut);\n      }\n    };\n  }, []);\n\n  return [ref, isHovered];\n}\n","/**\n * The hide/show option round button.\n */\nimport React, { FC, memo, MouseEvent } from \"react\";\nimport styled, { keyframes } from \"styled-components/macro\";\nimport { Hide as HideIcon } from \"styled-icons/boxicons-regular\";\nimport { Show as ShowIcon } from \"styled-icons/boxicons-regular\";\nimport { Theme } from \"../types/Theme\";\n\ninterface Props {\n  isHidden: boolean;\n  size?: number;\n  onClick: () => void;\n}\n\nexport const OptionHideShow: FC<Props> = memo(props => {\n  const { isHidden, size = 32, onClick, ...otherProps } = props;\n  const handleClick = (e: MouseEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    onClick();\n  };\n  return (\n    <Root onClick={handleClick} size={size} {...otherProps}>\n      {!isHidden && <StyledHideIcon size={size * 0.75} />}\n      {isHidden && <StyledShowIcon size={size * 0.75} />}\n    </Root>\n  );\n});\n\nconst scaleIn = keyframes`\n  from {\n    transform: scale(0);\n  }\n  to {\n    transform: scale(1);\n  }\n`;\n\nconst Root = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: ${(props: { size: number }) => `${props.size}px`};\n  height: ${(props: { size: number }) => `${props.size}px`};\n  border-radius: ${(props: { size: number }) => `${props.size / 2}px`};\n  animation: ${scaleIn} 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94) both;\n  animation-delay: 140ms;\n  transition: background-color 100ms;\n  background: ${(props: { theme: Theme }) =>\n    props.theme.folderOptionBackground};\n  opacity: 1;\n\n  &:hover {\n    opacity: 0.6;\n  }\n`;\n\nconst StyledHideIcon = styled(HideIcon)`\n  color: ${(props: { theme: Theme }) => props.theme.folderOptionColor};\n`;\n\nconst StyledShowIcon = styled(ShowIcon)`\n  color: ${(props: { theme: Theme }) => props.theme.folderOptionColor};\n`;\n","/**\n * The folder header, where there are the folder title and its show/hide option.\n */\nimport React, { FC } from \"react\";\nimport styled from \"styled-components/macro\";\nimport { useHover } from \"../hooks/useHover\";\nimport { OptionHideShow } from \"./OptionHideShow\";\nimport { Theme } from \"../types/Theme\";\n\ninterface Props {\n  title: string;\n  isHidden: boolean;\n  onOptionClick: () => void;\n}\n\nexport const FolderHeader: FC<Props> = ({ title, isHidden, onOptionClick }) => {\n  const [rootRef, isHovered] = useHover<HTMLParagraphElement>();\n\n  return (\n    <Root ref={rootRef}>\n      <Title>{title}</Title>\n      {isHovered && (\n        <Options>\n          <OptionHideShow\n            size={24}\n            isHidden={isHidden}\n            onClick={onOptionClick}\n          />\n        </Options>\n      )}\n    </Root>\n  );\n};\n\nconst Root = styled.div`\n  display: inline-flex;\n  cursor: pointer;\n  align-items: center;\n  margin-left: 10px; /* TODO: react-sortable-hoc grid workaround */\n`;\n\nconst Title = styled.p`\n  color: ${(props: { theme: Theme }) => props.theme.folderColor};\n  font-size: 19px;\n  font-weight: 500;\n  display: inline-block;\n`;\n\nconst Options = styled.div`\n  margin-left: 6px;\n`;\n","import { createAction } from \"typesafe-actions\";\nimport { Bookmark } from \"./../types/Bookmark\";\nimport { ChromeBookmark } from \"./../types/ChromeBookmark\";\nimport { ReduxPersistedState } from \"./../types/ReduxPersistedState\";\n\n// Session actions\nconst setQuery = createAction(\"session/SET_QUERY\", resolve => {\n  return (query: string) => resolve(query);\n});\n\nconst toggleShowHiddenBookmarks = createAction(\n  \"session/TOGGLE_SHOW_HIDDEN_BOOKMARKS\",\n  resolve => {\n    return () => resolve();\n  }\n);\n\n// Bookmark actions\nconst retrieveBookmarks = createAction(\n  \"bookmark/RETRIEVE_BOOKMARK\",\n  resolve => {\n    return () => resolve();\n  }\n);\n\nconst retrieveBookmarksSuccess = createAction(\n  \"bookmark/RETRIEVE_BOOKMARK_SUCCESS\",\n  resolve => {\n    return (\n      foldersById: { [id: string]: ChromeBookmark },\n      bookmarksById: { [id: string]: ChromeBookmark }\n    ) => resolve({ foldersById, bookmarksById });\n  }\n);\n\nconst moveBookmark = createAction(\"bookmark/MOVE_BOOKMARK\", resolve => {\n  return (bookmark: Bookmark, oldIndex: number, newIndex: number) =>\n    resolve({ bookmark, oldIndex, newIndex });\n});\n\nconst moveBookmarkSuccess = createAction(\n  \"bookmark/MOVE_BOOKMARK_SUCCESS\",\n  resolve => {\n    return () => resolve();\n  }\n);\n\nconst hideFolder = createAction(\"bookmarks/HIDE_FOLDER\", resolve => {\n  return (bookmarkId: string) => resolve(bookmarkId);\n});\n\nconst showFolder = createAction(\"bookmarks/SHOW_FOLDER\", resolve => {\n  return (bookmarkId: string) => resolve(bookmarkId);\n});\n\n// Theme actions\nconst goToNextTheme = createAction(\"theme/GO_TO_NEXT_THEME\", resolve => {\n  return () => resolve();\n});\n\n// Rehydration actions\nconst rehydrate = createAction(\"other/REHYDRATE_REQUEST\", resolve => {\n  return () => resolve();\n});\nconst rehydrateSuccess = createAction(\"other/REHYDRATE_SUCCESS\", resolve => {\n  return (persistedState: ReduxPersistedState) => resolve(persistedState);\n});\n\nexport const actions = {\n  toggleShowHiddenBookmarks,\n  setQuery,\n  retrieveBookmarks,\n  retrieveBookmarksSuccess,\n  moveBookmark,\n  moveBookmarkSuccess,\n  hideFolder,\n  showFolder,\n  goToNextTheme,\n  rehydrate,\n  rehydrateSuccess\n};\n","import { useCallback } from \"react\";\nimport { mapValues } from \"lodash\";\nimport { useDispatch } from \"redux-react-hook\";\n\nexport function useMappedActions<T>(actionsObj: T): T {\n  const dispatch = useDispatch();\n  // @ts-ignore\n  return mapValues(actionsObj, value => {\n    // @ts-ignore\n    return useCallback((...args) => dispatch(value(...args)), []);\n  });\n}\n","export const NODE_ENV = process.env.NODE_ENV;\nexport const IS_LIVE_EXAMPLE = process.env.REACT_APP_IS_LIVE_EXAMPLE;\n","/**\n * A single bookmark item of the bookmark grid.\n * Wrapped in SortableElement from react-sortable-hoc to make it sortable (in\n * the grid).\n * Since SortableElement doesn't work well with some CSS properties,\n * (specifically, hover and transition), we toggle them if the user is dragging\n * an item across the grid.\n */\nimport React from \"react\";\nimport styled from \"styled-components/macro\";\nimport { SortableElement } from \"react-sortable-hoc\";\nimport { getFaviconUrl } from \"../utils/getFaviconUrl\";\nimport { Theme } from \"../types/Theme\";\n\ninterface Props {\n  id: string;\n  title: string;\n  url?: string;\n  isHidden: boolean;\n  isHoverDisabled?: boolean;\n  isTransitionDisabled?: boolean;\n}\n\nexport const BookmarkGridItem = SortableElement<Props>(\n  ({ title, url, isHidden, isHoverDisabled, isTransitionDisabled }) => {\n    const faviconSrc = url && getFaviconUrl(url);\n\n    return (\n      <Root\n        draggable={false} // Disables the browser built-in drag handler\n        href={url}\n        rel=\"noopener noreferrer\"\n        isHoverDisabled={isHoverDisabled}\n        isTransitionDisabled={isTransitionDisabled}\n      >\n        <Content isHidden={isHidden}>\n          {url && <Favicon src={faviconSrc} />}\n          <Title>{title}</Title>\n        </Content>\n      </Root>\n    );\n  }\n);\n\ninterface RootProps {\n  theme: Theme;\n  isHoverDisabled?: boolean;\n  isTransitionDisabled?: boolean;\n}\nconst Root = styled.a`\n  display: flex;\n  flex-direction: row;\n  text-align: left;\n  margin: 6px 10px; /* TODO: react-sortable-hoc grid workaround */\n  height: 54px; /* TODO: react-sortable-hoc grid workaround */\n  font-size: 14px;\n  font-weight: 400;\n  width: 260px;\n  background: ${(props: RootProps) => props.theme.itemBackground};\n  border: ${(props: RootProps) => props.theme.itemBorder};\n  box-shadow: ${(props: RootProps) => props.theme.itemShadow};\n  border-radius: 4px;\n  cursor: ${(props: RootProps) =>\n    props.isHoverDisabled ? \"initial\" : \"pointer\"};\n  text-decoration: none;\n  box-sizing: border-box;\n  /* \n  We need to set transition to \"initial\" here while dragging elements, otherwise\n  the built-in react-sortable-hoc transition won't work: \n  See: https://github.com/clauderic/react-sortable-hoc/issues/334 \n  */\n  transition: ${(props: RootProps) =>\n    props.isTransitionDisabled\n      ? \"initial\"\n      : \"background 0.2s ease-out, box-shadow 0.2s ease-out\"};\n\n  &:hover,\n  &:focus {\n    background: ${(props: RootProps) =>\n      props.isHoverDisabled\n        ? props.theme.itemBackground\n        : props.theme.itemHoverBackground};\n    box-shadow: ${(props: RootProps) =>\n      props.isHoverDisabled\n        ? props.theme.itemShadow\n        : props.theme.itemHoverShadow};\n    outline: none;\n  }\n`;\n\nconst Content = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 4px 12px;\n  opacity: ${(props: { isHidden: boolean }) => (props.isHidden ? \"0.4\" : \"1\")};\n`;\n\nconst Favicon = styled.img`\n  height: 24px;\n  width: 24px;\n  min-width: 24px;\n  margin-right: 12px;\n`;\n\nconst Title = styled.span`\n  user-select: none;\n  letter-spacing: 0px;\n  font-weight: 500;\n  color: ${(props: { theme: Theme }) => props.theme.itemTextColor};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  word-break: break-word;\n  display: -webkit-box;\n  -webkit-box-orient: vertical;\n  -webkit-line-clamp: 2;\n\n  ${Root}:hover & {\n    color: ${(props: { theme: Theme }) => props.theme.itemHoverTextColor};\n  }\n\n  ${Root}:focus & {\n    color: ${(props: { theme: Theme }) => props.theme.itemHoverTextColor};\n  }\n`;\n","import { IS_LIVE_EXAMPLE } from \"./../config/constants\";\nimport { NODE_ENV } from \"../config/constants\";\n\nexport const getFaviconUrl = (url: string) => {\n  try {\n    if (NODE_ENV === \"development\" || IS_LIVE_EXAMPLE) {\n      const prefixLessUrl = new URL(url || \"\").hostname;\n      return `https://api.faviconkit.com/${prefixLessUrl}/32`;\n    } else {\n      return `chrome://favicon/size/16@2x/${url}`;\n    }\n  } catch (err) {\n    return \"\";\n  }\n};\n","/**\n * Grid of bookmarks (of a specific folder).\n * Wrapped in SortableContainer from react-sortable-hoc to allow the\n * re-ordering of its childrens.\n */\nimport React from \"react\";\nimport styled from \"styled-components/macro\";\nimport { SortableContainer } from \"react-sortable-hoc\";\nimport { BookmarkGridItem } from \"./BookmarkGridItem\";\nimport { Folder } from \"../types/Folder\";\n\ninterface Props {\n  folder: Folder;\n  isDragging: boolean;\n  isFolderHidden: boolean;\n}\n\nexport const BookmarkGrid = SortableContainer<Props>(\n  ({ folder, isDragging, isFolderHidden }) => {\n    return (\n      <Root>\n        {folder.bookmarks.map((bookmark, index) => (\n          <BookmarkGridItem\n            key={bookmark.id}\n            id={bookmark.id}\n            index={index}\n            title={bookmark.title}\n            url={bookmark.url}\n            isHoverDisabled={isDragging}\n            isTransitionDisabled={isDragging}\n            isHidden={isFolderHidden}\n          />\n        ))}\n      </Root>\n    );\n  }\n);\n\nconst Root = styled.ul`\n  display: grid;\n  /* grid-gap: 12px 20px; TODO: react-sortable-hoc grid workaround */\n  grid-template-columns: repeat(auto-fit, 280px);\n  /* grid-auto-rows: 54px; TODO: react-sortable-hoc grid workaround */\n  padding-left: 0;\n`;\n","/**\n * The list of bookmark folders. Handle the interactions between the folder\n * show/hide option and Redux.\n */\nimport React, { FC, memo, useState } from \"react\";\nimport styled from \"styled-components/macro\";\nimport { FolderHeader } from \"./FolderHeader\";\nimport { BookmarkTree } from \"../types/BookmarkTree\";\nimport { Folder } from \"../types/Folder\";\nimport { actions } from \"../actions\";\nimport { useMappedActions } from \"../hooks/useMappedActions\";\nimport { BookmarkGrid } from \"./BookmarkGrid\";\n\ninterface Props {\n  bookmarkTree: BookmarkTree;\n}\n\nexport const FolderList: FC<Props> = memo(({ bookmarkTree }) => {\n  const [isDragging, setIsDragging] = useState(false);\n  const { moveBookmark } = useMappedActions(actions);\n  const handleStartDragging = () => {\n    setIsDragging(true);\n  };\n  const handleStopDragging = (\n    folder: Folder,\n    params: {\n      oldIndex: number;\n      newIndex: number;\n    }\n  ) => {\n    const bookmark = folder.bookmarks[params.oldIndex];\n    moveBookmark(bookmark, params.oldIndex, params.newIndex);\n    setIsDragging(false);\n  };\n  const { hideFolder, showFolder } = useMappedActions(actions);\n  return (\n    <Root>\n      {bookmarkTree.map(folder => {\n        const handleOptionClick = () => {\n          if (folder.isHidden) {\n            showFolder(folder.id);\n          } else {\n            hideFolder(folder.id);\n          }\n        };\n        return (\n          <FolderItem key={folder.id}>\n            <FolderHeader\n              title={folder.title}\n              isHidden={folder.isHidden}\n              onOptionClick={handleOptionClick}\n            />\n            <BookmarkGrid\n              folder={folder}\n              isFolderHidden={folder.isHidden}\n              isDragging={isDragging}\n              axis=\"xy\"\n              distance={8}\n              updateBeforeSortStart={handleStartDragging}\n              onSortEnd={params => handleStopDragging(folder, params)}\n            />\n          </FolderItem>\n        );\n      })}\n    </Root>\n  );\n});\n\nconst Root = styled.ul`\n  display: block;\n  text-align: left;\n  padding-left: 0;\n  width: 100%;\n  max-width: 860px;\n`;\n\nconst FolderItem = styled.li`\n  list-style: none;\n  padding-left: 0px;\n  margin-top: 30px;\n  margin-bottom: 10px;\n`;\n","/**\n * Searchbar that resides inside the app header.\n */\nimport React, { ChangeEvent, forwardRef } from \"react\";\nimport styled from \"styled-components/macro\";\nimport { Search as SearchIcon } from \"styled-icons/material\";\nimport { Theme } from \"../types/Theme\";\n\ninterface Props {\n  query: string;\n  onChange: (query: string) => void;\n}\n\nexport const SearchBar = forwardRef<HTMLInputElement, Props>((props, ref) => {\n  const { query, onChange } = props;\n  const handleInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n    onChange(e.target.value);\n  };\n  return (\n    <Form>\n      <StyledSearchIcon />\n      <Input\n        ref={ref}\n        placeholder=\"Search bookmarks...\"\n        type=\"text\"\n        onChange={handleInputChange}\n        value={query}\n      />\n    </Form>\n  );\n});\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  width: 190px;\n  height: 32px;\n`;\n\nconst StyledSearchIcon = styled(SearchIcon)`\n  color: ${(props: { theme: Theme }) => props.theme.headerColor};\n  width: 28px;\n  height: 28px;\n  margin-right: 6px;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  height: 100%;\n  font-size: 16px;\n  font-weight: 500;\n  transition: all 0.6s ease-out;\n  color: ${(props: { theme: Theme }) => props.theme.headerColor};\n  background-color: transparent;\n  border: none;\n  outline: 0;\n\n  &:hover:focus {\n    outline: 0;\n    border: none;\n  }\n\n  &:focus {\n    border: none;\n    border-bottom: 1px solid white;\n    border-bottom-color: ${(props: { theme: Theme }) =>\n      props.theme.headerColor};\n  }\n\n  &:hover::placeholder {\n  }\n\n  &::placeholder {\n    color: ${(props: { theme: Theme }) => props.theme.headerColor};\n    opacity: 0.6;\n  }\n`;\n","/**\n * Just the SVG logo.\n * Putting it inside a component allows us to easily change its fill color\n * trough props.\n */\nimport React, { FC } from \"react\";\nimport { withTheme } from \"styled-components\";\nimport { Theme } from \"../types/Theme\";\n\ninterface Props {\n  theme: Theme;\n}\n\nexport const LogoImage: FC<Props> = withTheme((props: Props) => {\n  const { theme, ...otherProps } = props;\n  return (\n    <svg viewBox=\"0 0 56 56\" xmlSpace=\"preserve\" {...otherProps}>\n      <g>\n        <path\n          d=\"M0,14.5v39h56v-39H0z M54,51.5H2v-35h52V51.5z\"\n          fill={theme.headerColor}\n        />\n        <path\n          d=\"M3,12.5h50c0.552,0,1-0.448,1-1s-0.448-1-1-1H3c-0.552,0-1,0.448-1,1S2.448,12.5,3,12.5z\"\n          fill={theme.headerColor}\n        />\n        <path\n          d=\"M6,8.5h44c0.552,0,1-0.448,1-1s-0.448-1-1-1H6c-0.552,0-1,0.448-1,1S5.448,8.5,6,8.5z\"\n          fill={theme.headerColor}\n        />\n        <path\n          d=\"M9,4.5h38c0.552,0,1-0.448,1-1s-0.448-1-1-1H9c-0.552,0-1,0.448-1,1S8.448,4.5,9,4.5z\"\n          fill={theme.headerColor}\n        />\n      </g>\n    </svg>\n  );\n});\n","import { useState, useEffect, useRef } from \"react\";\n\ninterface Parameters {\n  key: string;\n  ctrlKey?: boolean;\n  shiftKey?: boolean;\n  metaKey?: boolean;\n  onKeyDown?: (e: KeyboardEvent) => void;\n  onKeyUp?: (e: KeyboardEvent) => void;\n}\n\nconst checkKeyValidity = (e: KeyboardEvent, params: Parameters) => {\n  return (\n    e.key === params.key &&\n    e.ctrlKey === !!params.ctrlKey &&\n    e.metaKey === !!params.metaKey &&\n    e.shiftKey === !!params.shiftKey\n  );\n};\n\nexport function useKeyboardPress(params: Parameters) {\n  const [isKeyDown, setIsKeyDown] = useState(false);\n  const shouldDisableKeyDownUpdate = useRef(false);\n\n  const handleKeyDown = (e: KeyboardEvent) => {\n    const isKeyValid = checkKeyValidity(e, params);\n    if (isKeyValid) {\n      if (params.onKeyDown) {\n        params.onKeyDown(e);\n      }\n      if (!shouldDisableKeyDownUpdate.current) {\n        shouldDisableKeyDownUpdate.current = true;\n        setIsKeyDown(true);\n      }\n    }\n  };\n\n  const handleKeyUp = (e: KeyboardEvent) => {\n    shouldDisableKeyDownUpdate.current = false;\n    if (params.onKeyUp) {\n      params.onKeyUp(e);\n    }\n    setIsKeyDown(false);\n  };\n\n  useEffect(() => {\n    window.document.addEventListener(\"keydown\", handleKeyDown);\n    window.document.addEventListener(\"keyup\", handleKeyUp);\n    return () => {\n      window.document.removeEventListener(\"keydown\", handleKeyDown);\n      window.document.removeEventListener(\"keyup\", handleKeyUp);\n    };\n  }, []);\n\n  return isKeyDown;\n}\n","/**\n * The app header (with logo, searchbar and a few links).\n */\nimport React, { FC, memo, MouseEvent, useRef } from \"react\";\nimport styled, { keyframes } from \"styled-components/macro\";\nimport { actions } from \"../actions\";\nimport { ReduxState } from \"../types/ReduxState\";\nimport { useMappedActions } from \"../hooks/useMappedActions\";\nimport { useMappedState } from \"redux-react-hook\";\nimport { SearchBar } from \"./SearchBar\";\nimport { LogoImage } from \"./LogoImage\";\nimport { MarkGithub as GithubIcon } from \"styled-icons/octicons\";\nimport {\n  Hide as HideIcon,\n  Show as ShowIcon\n} from \"styled-icons/boxicons-regular\";\nimport { ColorLens as ColorLensIcon } from \"styled-icons/material\";\nimport { useKeyboardPress } from \"../hooks/useKeyboardPress\";\nimport { Theme } from \"../types/Theme\";\n\nconst mapState = (state: ReduxState) => ({\n  query: state.session.query,\n  isShowingHiddenBookmarks: state.session.isShowingHiddenBookmarks\n});\n\nexport const Header: FC = memo(props => {\n  const { isShowingHiddenBookmarks, query } = useMappedState(mapState);\n  const {\n    toggleShowHiddenBookmarks,\n    setQuery,\n    goToNextTheme\n  } = useMappedActions(actions);\n  const searchBarRef = useRef<HTMLInputElement>(null);\n\n  // Overrides CMD+F default behaviour\n  useKeyboardPress({\n    key: \"f\",\n    metaKey: true,\n    onKeyDown: e => {\n      e.preventDefault();\n      searchBarRef.current && searchBarRef.current.focus();\n    }\n  });\n\n  const handleBookmarksVisibilityClick = (e: MouseEvent<HTMLAnchorElement>) => {\n    e.preventDefault();\n    toggleShowHiddenBookmarks();\n  };\n\n  const handleThemeSwitchClick = (e: MouseEvent<HTMLAnchorElement>) => {\n    e.preventDefault();\n    goToNextTheme();\n  };\n\n  return (\n    <Root>\n      <Logo>\n        <StyledLogoImage />\n        <LogoText>Another Tab</LogoText>\n      </Logo>\n      <SearchBar ref={searchBarRef} query={query} onChange={setQuery} />\n      <Menu>\n        <MenuItem onClick={handleBookmarksVisibilityClick}>\n          {isShowingHiddenBookmarks ? <StyledHideIcon /> : <StyledShowIcon />}\n        </MenuItem>\n        <Separator />\n        <MenuItem onClick={handleThemeSwitchClick}>\n          <StyledColorLensIcon />\n        </MenuItem>\n        <Separator />\n        <MenuItem\n          href=\"https://github.com/mmazzarolo/chrome-another-tab\"\n          tabIndex={-1}\n        >\n          <StyledGithubIcon />\n        </MenuItem>\n      </Menu>\n    </Root>\n  );\n});\n\nconst fadeInBottom = keyframes`\n  from { \n    transform: translateY(-40px); \n    opacity: 0;\n  }\n  to { \n    transform: translateY(0); \n    opacity: 1; \n  }\n`;\n\nconst Root = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  padding: 8px 40px;\n  height: 28px;\n  background: ${(props: { theme: Theme }) => props.theme.headerBackground};\n  animation: ${fadeInBottom} 0.1s ease-in-out both;\n  animation-delay: 0.1s;\n`;\n\nconst Logo = styled.div`\n  display: flex;\n  height: 28px;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst StyledLogoImage = styled(LogoImage)`\n  width: 28px;\n  height: 28px;\n`;\n\nconst LogoText = styled.p`\n  color: ${(props: { theme: Theme }) => props.theme.headerColor};\n  font-size: 17px;\n  font-weight: 600;\n  margin-left: 16px;\n`;\n\nconst Menu = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst MenuItem = styled.a`\n  display: flex;\n  align-items: center;\n  font-size: 16px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.3s;\n\n  &:hover {\n    opacity: 0.7;\n  }\n`;\n\nconst Separator = styled.span`\n  background: ${(props: { theme: Theme }) => props.theme.headerColor};\n  margin: 0px 16px;\n  height: 18px;\n  width: 1px;\n`;\n\nconst StyledHideIcon = styled(HideIcon)`\n  color: ${(props: { theme: Theme }) => props.theme.headerColor};\n  height: 22px;\n  width: 22px;\n  margin-right: 4px;\n`;\n\nconst StyledColorLensIcon = styled(ColorLensIcon)`\n  color: ${(props: { theme: Theme }) => props.theme.headerColor};\n  height: 22px;\n  width: 22px;\n  margin-right: 4px;\n`;\n\nconst StyledShowIcon = styled(ShowIcon)`\n  color: ${(props: { theme: Theme }) => props.theme.headerColor};\n  height: 22px;\n  width: 22px;\n  margin-right: 4px;\n`;\n\nconst StyledGithubIcon = styled(GithubIcon)`\n  color: ${(props: { theme: Theme }) => props.theme.headerColor};\n  height: 22px;\n  width: 22px;\n`;\n","export const compareIndexes = (\n  a: { index?: number },\n  b: { index?: number }\n) => {\n  let comparison = 0;\n  const indexA = a.index || 0;\n  const indexB = b.index || 0;\n  if (indexA > indexB) {\n    comparison = 1;\n  } else if (indexA < indexB) {\n    comparison = -1;\n  }\n  return comparison;\n};\n","/**\n * Screen shown to the user when the are not bookmarks in the list (most of the\n * time it happens if no bookmarks are available in the search result).\n */\nimport React, { FC } from \"react\";\nimport styled, { keyframes } from \"styled-components/macro\";\nimport { Theme } from \"../types/Theme\";\n\nexport const NoResult: FC = () => {\n  return (\n    <Root>\n      <Message>No result</Message>\n    </Root>\n  );\n};\n\nconst fadeInTop = keyframes`\n  from { \n    transform: translateY(20px); \n    opacity: 0;\n  }\n  to { \n    transform: translateY(0); \n    opacity: 1; \n  }\n`;\n\nconst Root = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  min-height: 100vh;\n`;\n\nconst Message = styled.p`\n  color: ${(props: { theme: Theme }) => props.theme.noResultColor};\n  font-size: x-large;\n  font-weight: 500;\n  animation: ${fadeInTop} 0.4s ease-in-out both;\n`;\n","/**\n * App entry point\n */\nimport React, { FC } from \"react\";\nimport styled, { keyframes, ThemeProvider } from \"styled-components/macro\";\nimport { isEmpty } from \"lodash\";\nimport { FolderList } from \"./FolderList\";\nimport { useOnMount } from \"../hooks/useOnMount\";\nimport { actions } from \"../actions\";\nimport { Header } from \"./Header\";\nimport { ReduxState } from \"../types/ReduxState\";\nimport { useMappedState } from \"redux-react-hook\";\nimport { useMappedActions } from \"../hooks/useMappedActions\";\nimport { getBookmarkTree } from \"../selectors/getBookmarkTree\";\nimport { NoResult } from \"./NoResult\";\nimport { Theme } from \"../types/Theme\";\nimport { getCurrentTheme } from \"../selectors/getCurrentTheme\";\n\nconst mapState = (state: ReduxState) => ({\n  bookmarkTree: getBookmarkTree(state),\n  areBookmarksReady: state.session.areBookmarksReady,\n  currentTheme: getCurrentTheme(state)\n});\n\nexport const App: FC = () => {\n  const { areBookmarksReady, bookmarkTree, currentTheme } = useMappedState(\n    mapState\n  );\n  const { retrieveBookmarks, rehydrate } = useMappedActions(actions);\n\n  const isBookmarkTreeEmpty = isEmpty(bookmarkTree);\n\n  useOnMount(() => {\n    rehydrate();\n    retrieveBookmarks();\n  });\n\n  if (!areBookmarksReady) {\n    return null;\n  }\n\n  return (\n    <ThemeProvider theme={currentTheme}>\n      <Root>\n        <Header />\n        {!isBookmarkTreeEmpty && (\n          <Main>\n            <FolderList bookmarkTree={bookmarkTree} />\n          </Main>\n        )}\n        {isBookmarkTreeEmpty && <NoResult />}\n      </Root>\n    </ThemeProvider>\n  );\n};\n\nconst fadeIn = keyframes`\n  from { opacity: 0;}\n  to { opacity: 1; }\n`;\n\nconst Root = styled.div`\n  animation: ${fadeIn} 0.1s ease-in-out both;\n  text-align: center;\n  transition: all 0.6s ease-out;\n  height: 100%;\n  min-height: 100vh;\n  overflow: hidden;\n  position: relative;\n\n  &::before {\n    content: \"\";\n    position: fixed;\n    width: 100%;\n    height: 100vh;\n    top: 0;\n    left: 0;\n    will-change: transform;\n    z-index: -1;\n    background: ${(props: { theme: Theme }) => props.theme.appBackground};\n  }\n`;\n\nconst Main = styled.main`\n  animation: ${fadeIn} 0.2s ease-in-out both;\n  animation-delay: 0.1s;\n  padding: 0 40px;\n  display: flex;\n  justify-content: center;\n`;\n","import { compareIndexes } from \"./../utils/compareIndexes\";\nimport { BookmarkTree } from \"./../types/BookmarkTree\";\nimport { ReduxState } from \"../types/ReduxState\";\nimport { getIsFolderHidden } from \"./getIsFolderHidden\";\n\n// Given the Redux state returns a \"BookmarkTree\" object with data that can\n// be easily represented using React components.\nexport const getBookmarkTree = (state: ReduxState): BookmarkTree => {\n  const { foldersById, bookmarksById } = state.bookmarks;\n  const { query, isShowingHiddenBookmarks } = state.session;\n  // Get an array of bookmark folders (sorted like in the Chrome bookmarks)\n  const folders: BookmarkTree = Object.keys(foldersById)\n    .map(folderId => ({\n      ...foldersById[folderId],\n      isHidden: getIsFolderHidden(state, folderId),\n      bookmarks: []\n    }))\n    .filter(x => isShowingHiddenBookmarks || !x.isHidden)\n    .sort(compareIndexes);\n  // Populate the folders with their bookmarks\n  Object.keys(bookmarksById).forEach(bookmarkId => {\n    const bookmark = bookmarksById[bookmarkId];\n    const isTitleInQuery = bookmark.title\n      .toLowerCase()\n      .includes(query.toLowerCase());\n    const isUrlInQuery = (bookmark.url || \"\")\n      .toLowerCase()\n      .includes(query.toLowerCase());\n    const isVisible = isTitleInQuery || isUrlInQuery;\n    if (isVisible) {\n      const folderIndex = folders.findIndex(\n        folder => folder.id === bookmark.parentId\n      );\n      if (folderIndex > -1) {\n        if (folders[folderIndex].bookmarks) {\n          folders[folderIndex].bookmarks.push(bookmark);\n        } else {\n          folders[folderIndex].bookmarks = [bookmark];\n        }\n      }\n    }\n  });\n  // Remove the empty folders\n  const bookmarkTree = folders.filter(folder => {\n    return folder.bookmarks && folder.bookmarks.length > 0;\n  });\n  // Sort the folders bookmarks (like in the Chrome bookmarks)\n  bookmarkTree.forEach(folder => {\n    folder.bookmarks.sort(compareIndexes);\n  });\n  return bookmarkTree;\n};\n","import { ReduxState } from \"../types/ReduxState\";\n\nexport const getIsFolderHidden = (state: ReduxState, folderId: string) => {\n  const { hiddenFolderIds } = state.bookmarks;\n  const isFolderHidden = hiddenFolderIds.includes(folderId);\n  return isFolderHidden;\n};\n","import { ReduxState } from \"../types/ReduxState\";\n\nexport const getCurrentTheme = (state: ReduxState) => {\n  const { availableThemes, currentThemeId } = state.themes;\n  return availableThemes[currentThemeId];\n};\n","/**\n * Global styles applied to the entire app\n */\nimport { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\n      \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\n      sans-serif;\n    -webkit-font-smoothing: antialiased;\n  }\n  code {\n    font-family: source-code-pro, Menlo, Monaco, Consolas, \"Courier New\",\n      monospace;\n  }\n`;\n","import { pull } from \"lodash\";\nimport { produce } from \"immer\";\nimport { getType } from \"typesafe-actions\";\nimport { moveArrayElement } from \"./../utils/moveArrayElement\";\nimport { compareIndexes } from \"./../utils/compareIndexes\";\nimport { actions } from \"../actions\";\nimport { ReduxAction } from \"../types/ReduxAction\";\nimport { ChromeBookmark } from \"../types/ChromeBookmark\";\n\nexport type State = {\n  readonly foldersById: { [id: string]: ChromeBookmark };\n  readonly bookmarksById: { [id: string]: ChromeBookmark };\n  readonly hiddenFolderIds: string[];\n};\n\nexport const initialState: State = {\n  foldersById: {},\n  bookmarksById: {},\n  hiddenFolderIds: []\n};\n\nexport const bookmarksReducer = (\n  state: State = initialState,\n  action: ReduxAction\n): State => {\n  return produce(state, draft => {\n    switch (action.type) {\n      case getType(actions.retrieveBookmarksSuccess): {\n        draft.foldersById = action.payload.foldersById;\n        draft.bookmarksById = action.payload.bookmarksById;\n        break;\n      }\n      case getType(actions.hideFolder): {\n        const folderId = action.payload;\n        if (draft.hiddenFolderIds.indexOf(folderId) === -1) {\n          draft.hiddenFolderIds.push(folderId);\n        }\n        break;\n      }\n      case getType(actions.showFolder): {\n        const folderId = action.payload;\n        if (draft.hiddenFolderIds.indexOf(folderId) > -1) {\n          pull(draft.hiddenFolderIds, folderId);\n        }\n        break;\n      }\n      case getType(actions.moveBookmark): {\n        // This action is triggered when the user moves a bookmark to a new\n        // position. Since the reducer structure keeps the bookmarks in an\n        // unordered structure (an object) we need to do some tricks to update\n        // its position in the state.\n        const { bookmark, oldIndex, newIndex } = action.payload;\n        // First, we put all the folder's bookmarks in an array and we sort it\n        // to get their current position (pre-sort)...\n        let bookmarks = Object.values(state.bookmarksById)\n          .filter(x => x.parentId === bookmark.parentId)\n          .sort(compareIndexes);\n        // Then, given the updated bookmark position, we move it in the array...\n        bookmarks = moveArrayElement(bookmarks, oldIndex, newIndex);\n        // And lastly we update the state by updating the index of all the\n        // elements in the folder\n        bookmarks.forEach((x, index) => {\n          draft.bookmarksById[x.id].index = index;\n        });\n        break;\n      }\n      case getType(actions.rehydrateSuccess): {\n        const persistedState = action.payload;\n        if (persistedState.bookmarks) {\n          return {\n            ...initialState,\n            ...persistedState.bookmarks\n          };\n        }\n        break;\n      }\n      default:\n        return state;\n    }\n  });\n};\n","import { produce } from \"immer\";\nimport { getType } from \"typesafe-actions\";\nimport { actions } from \"../actions\";\nimport { ReduxAction } from \"../types/ReduxAction\";\n\nexport type State = {\n  readonly query: string;\n  readonly isShowingHiddenBookmarks: boolean;\n  readonly isRetrievingBookmarks: boolean;\n  readonly areBookmarksReady: boolean;\n  readonly isDragging: boolean;\n};\n\nexport const initialState: State = {\n  query: \"\",\n  isShowingHiddenBookmarks: false,\n  isRetrievingBookmarks: false,\n  isDragging: false,\n  areBookmarksReady: false\n};\n\nexport const sessionReducer = (\n  state: State = initialState,\n  action: ReduxAction\n): State => {\n  return produce(state, draft => {\n    switch (action.type) {\n      case getType(actions.retrieveBookmarks): {\n        draft.isRetrievingBookmarks = true;\n        break;\n      }\n      case getType(actions.retrieveBookmarksSuccess): {\n        draft.isRetrievingBookmarks = false;\n        draft.areBookmarksReady = true;\n        break;\n      }\n      case getType(actions.rehydrateSuccess): {\n        if (action.payload.bookmarks) {\n          draft.areBookmarksReady = true;\n        }\n        break;\n      }\n      case getType(actions.toggleShowHiddenBookmarks): {\n        draft.isShowingHiddenBookmarks = !state.isShowingHiddenBookmarks;\n        break;\n      }\n      case getType(actions.setQuery): {\n        draft.query = action.payload;\n        break;\n      }\n      default:\n        return state;\n    }\n  });\n};\n","import { produce } from \"immer\";\nimport { getType } from \"typesafe-actions\";\nimport { actions } from \"../actions\";\nimport { ReduxAction } from \"../types/ReduxAction\";\nimport { themes } from \"../config/themes\";\n\nexport type State = {\n  availableThemes: typeof themes;\n  currentThemeId: string;\n};\n\nexport const initialState: State = {\n  availableThemes: themes,\n  currentThemeId: \"deepBlue\"\n};\n\nexport const themesReducer = (\n  state: State = initialState,\n  action: ReduxAction\n): State => {\n  return produce(state, draft => {\n    switch (action.type) {\n      case getType(actions.rehydrateSuccess): {\n        const persistedState = action.payload;\n        if (persistedState.themes) {\n          return {\n            ...initialState,\n            currentThemeId: persistedState.themes.currentThemeId\n          };\n        }\n        break;\n      }\n      case getType(actions.goToNextTheme): {\n        const availableThemeIds = Object.keys(state.availableThemes);\n        const currentThemeIndex = availableThemeIds.indexOf(\n          state.currentThemeId\n        );\n        const nextThemeIndex =\n          currentThemeIndex >= availableThemeIds.length - 1\n            ? 0\n            : currentThemeIndex + 1;\n        const nextThemeId = availableThemeIds[nextThemeIndex];\n        state.currentThemeId = nextThemeId;\n        break;\n      }\n      default:\n        return state;\n    }\n  });\n};\n","import { Theme } from \"./../types/Theme\";\nimport themeDeepBlue from \"../assets/themes/deep-blue.json\";\nimport themeSky from \"../assets/themes/sky.json\";\nimport themeWhite from \"../assets/themes/white.json\";\n\nexport const themes: { [id: string]: Theme } = {\n  deepBlue: themeDeepBlue,\n  sky: themeSky,\n  white: themeWhite\n};\n","import { combineReducers } from \"redux\";\nimport { bookmarksReducer } from \"./bookmarksReducer\";\nimport { sessionReducer } from \"./sessionReducer\";\nimport { themesReducer } from \"./themesReducer\";\n\nexport const rootReducer = combineReducers({\n  bookmarks: bookmarksReducer,\n  session: sessionReducer,\n  themes: themesReducer\n});\n","export const moveArrayElement = <T>(\n  array: T[],\n  fromIndex: number,\n  toIndex: number\n) => {\n  if (fromIndex === toIndex) {\n    return array;\n  }\n\n  const newArray = [...array];\n\n  const target = newArray[fromIndex];\n  const inc = toIndex < fromIndex ? -1 : 1;\n\n  for (let i = fromIndex; i !== toIndex; i += inc) {\n    newArray[i] = newArray[i + inc];\n  }\n\n  newArray[toIndex] = target;\n\n  return newArray;\n};\n","import { Bookmark } from \"./../types/Bookmark\";\nimport { IS_LIVE_EXAMPLE } from \"./../config/constants\";\nimport { delay } from \"../utils/delay\";\nimport bookmarksFixture from \"../fixtures/bookmarks.json\";\nimport { ChromeBookmark } from \"./../types/ChromeBookmark\";\nimport { NODE_ENV } from \"../config/constants\";\n\nexport const getBookmarks = async () => {\n  if (NODE_ENV === \"development\" || IS_LIVE_EXAMPLE) {\n    await delay(100);\n    return bookmarksFixture;\n  } else {\n    return new Promise<ChromeBookmark[]>(res => chrome.bookmarks.getTree(res));\n  }\n};\n\nexport const moveBookmark = async (\n  bookmark: Bookmark,\n  oldIndex: number,\n  newIndex: number\n) => {\n  if (NODE_ENV !== \"development\") {\n    return new Promise<ChromeBookmark>(resolve => {\n      // The Chrome move API seems to have a bug when you move a bookmark to\n      // a position where the new index is greater than the current one.\n      // Increasing the updated index position by 1 for this specific case\n      // seems to fix the issue: https://stackoverflow.com/q/13264060/4836602\n      let fixedNewIndex = newIndex;\n      if (oldIndex < newIndex) {\n        fixedNewIndex++;\n      }\n      chrome.bookmarks.move(\n        bookmark.id,\n        { index: fixedNewIndex, parentId: bookmark.parentId },\n        resolve\n      );\n    });\n  }\n};\n","import { ChromeBookmark } from \"./../types/ChromeBookmark\";\n\ntype ChromeBookmarksById = { [id: string]: ChromeBookmark };\n\nconst withoutChildren = (bookmark: ChromeBookmark) => ({\n  index: bookmark.index,\n  title: bookmark.title,\n  url: bookmark.url,\n  dateGroupModified: bookmark.dateGroupModified,\n  id: bookmark.id,\n  parentId: bookmark.parentId,\n  unmodifiable: bookmark.unmodifiable\n});\n\nexport const parseChromeBookmarks = (chromeBookmarks: ChromeBookmark[]) => {\n  const foldersById: ChromeBookmarksById = {};\n  const bookmarksById: ChromeBookmarksById = {};\n  const parseBookmarkNodes = (nodes: ChromeBookmark[]) => {\n    nodes.forEach(node => {\n      if (node.children) {\n        foldersById[node.id] = withoutChildren(node);\n        parseBookmarkNodes(node.children);\n      } else {\n        bookmarksById[node.id] = node;\n      }\n    });\n  };\n  parseBookmarkNodes(chromeBookmarks);\n\n  return { foldersById, bookmarksById };\n};\n","import { put } from \"redux-saga/effects\";\nimport { actions } from \"../actions/index\";\nimport { getBookmarks } from \"../services/chromeService\";\nimport { parseChromeBookmarks } from \"../utils/parseChromeBookmarks\";\n\nexport const retrieveBookmarksSaga = function*() {\n  const chromeBookmarks = yield getBookmarks();\n  const parsedBookmarks = parseChromeBookmarks(chromeBookmarks);\n  yield put(\n    actions.retrieveBookmarksSuccess(\n      parsedBookmarks.foldersById,\n      parsedBookmarks.bookmarksById\n    )\n  );\n};\n","import { put } from \"redux-saga/effects\";\nimport { actions } from \"./../actions/index\";\n\nexport const rehydrateSaga = function*() {\n  const storedReduxState = localStorage.getItem(\"REDUX_STATE\");\n  const reduxState = storedReduxState ? JSON.parse(storedReduxState) : {};\n  yield put(actions.rehydrateSuccess(reduxState));\n};\n","import { select } from \"redux-saga/effects\";\nimport { ReduxState } from \"./../types/ReduxState\";\nimport { ReduxPersistedState } from \"./../types/ReduxPersistedState\";\n\nexport const persistSaga = function*() {\n  const reduxState: ReduxState = yield select();\n  const reduxStateToPersist: ReduxPersistedState = {\n    bookmarks: reduxState.bookmarks,\n    themes: reduxState.themes\n  };\n  localStorage.setItem(\"REDUX_STATE\", JSON.stringify(reduxStateToPersist));\n};\n","import { ActionType } from \"typesafe-actions\";\nimport { put } from \"redux-saga/effects\";\nimport { moveBookmark } from \"./../services/chromeService\";\nimport { actions } from \"../actions/index\";\n\n// When the user sorts a bookmark item trough drag and drop we also update it\n// in the Chrome bookmarks\nexport const moveBookmarkSaga = function*(\n  action: ActionType<typeof actions.moveBookmark>\n) {\n  const { bookmark, oldIndex, newIndex } = action.payload;\n  yield moveBookmark(bookmark, oldIndex, newIndex);\n  yield put(actions.moveBookmarkSuccess());\n};\n","import { all, takeEvery } from \"redux-saga/effects\";\nimport { getType } from \"typesafe-actions\";\nimport { actions } from \"./../actions/index\";\nimport { retrieveBookmarksSaga } from \"./retrieveBookmarksSaga\";\nimport { rehydrateSaga } from \"./rehydrateSaga\";\nimport { persistSaga } from \"./persistSaga\";\nimport { moveBookmarkSaga } from \"./moveBookmarkSaga\";\n\nexport const rootSaga = function*() {\n  yield all([\n    takeEvery(getType(actions.retrieveBookmarks), retrieveBookmarksSaga),\n    takeEvery(getType(actions.rehydrate), rehydrateSaga),\n    takeEvery(getType(actions.moveBookmark), moveBookmarkSaga),\n    takeEvery(\n      [\n        getType(actions.showFolder),\n        getType(actions.hideFolder),\n        getType(actions.goToNextTheme),\n        getType(actions.retrieveBookmarksSuccess)\n      ],\n      persistSaga\n    )\n  ]);\n};\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { rootReducer } from \"../reducers\";\nimport { rootSaga } from \"../sagas\";\nimport { NODE_ENV } from \"../config/constants\";\n\nconst loggerMiddleware = createLogger({\n  collapsed: true,\n  duration: true\n});\n\nconst sagaMiddleware = createSagaMiddleware();\n\nexport const createReduxStore = (initialState?: {}) => {\n  const middlewares = [];\n  if (NODE_ENV === \"development\") {\n    middlewares.push(loggerMiddleware);\n  }\n  middlewares.push(sagaMiddleware);\n  const enhancer = compose(applyMiddleware(...middlewares));\n  const store = createStore(rootReducer, initialState!, enhancer);\n  sagaMiddleware.run(rootSaga);\n  return store;\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { StoreContext } from \"redux-react-hook\";\nimport { App } from \"./components/App\";\nimport { GlobalStyle } from \"./components/GlobalStyle\";\nimport { createReduxStore } from \"./utils/createReduxStore\";\n\nconst store = createReduxStore();\n\nReactDOM.render(\n  <>\n    <GlobalStyle />\n    <StoreContext.Provider value={store}>\n      <App />\n    </StoreContext.Provider>\n  </>,\n  document.getElementById(\"root\")\n);\n","import { useEffect } from \"react\";\n\ntype EffectCallback = () => void | (() => void);\n\nexport function useOnMount(onMount: EffectCallback) {\n  useEffect(onMount, []);\n}\n"],"sourceRoot":""}